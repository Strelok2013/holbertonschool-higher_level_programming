=======================
How to use add_integer.py
=======================

Blah blah, its just a file that adds 2 ints and prints exceptions when it fails

Numbers
============
``add_integer()`` returns the product of two ints or floats

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5

::

    >>> add_integer(2, -3)
    -1

Floating point numbers also work

::

    >>> add_integer(2.0, 3)
    5


Non-Numbers
===========

::

    >>> add_integer('a', 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

::

    >>> add_integer((float('nan')))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

::

    >>> add_integer(1)
    99

:: 
    >>> add_integer()
    Traceback (most recent call last):
    TypeError: a must be an integer