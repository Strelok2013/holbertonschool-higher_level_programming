test(icles)
Sample:
::
    >>>command()
    >>>commnad2()
    expectedresult

error sample:
::
    >>>command()
    >>>command()
    Traceback (most recent call last):
    Exception: description of exception

Instantiation
=============

::
    >>>MyList = __import__('1-my_list').MyList
    >>>my_list = MyList()
    >>>type(my_list)
    <class '__main__.MyList'>


__str__
=======

::
    >>>print(my_list)
    []

append()
========

::
    >>>my_list.append(3)
    >>>my_list.append(5)
    >>>my_list.append(4)
    >>>print(my_list)
    [3, 5, 4]




check inherits from list ????
========================

::
    >>>my_list = MyList()
    >>>issubclassMyList, list)
    True

print_sorted() with sorted append
=================================

::
    >>>my_list = MyList()
    >>>my_list.append(1)
    >>>my_list.append(2)
    >>>my_list.append(3)
    >>>my_list.append(4)
    >>>my_list.append(5)
    >>>my_list.print_sorted()
    [1, 2, 3, 4, 5]

print_sorted() with not sorted append
=====================================

::
    >>>my_list = MyList()
    >>>my_list.append(2)
    >>>my_list.append(3)
    >>>my_list.append(7)
    >>>my_list.append(1)
    >>>my_list.append(3)
    >>>my_list.print_sorted()
    [1, 2, 3, 3, 7]

print_sorted() with no sorted append with negative number
=========================================================

::
    >>>my_list = MyList()
    >>>my_list.append(2)
    >>>my_list.append(-3)
    >>>my_list.append(7)
    >>>my_list.append(1)
    >>>my_list.append(3)
    >>>my_list.print_sorted()
    [-3, 1, 2, 3, 7]


print_sorted() with empty list
==============================

::
    >>>my_list = MyList()
    []


print_sorted() returns a new list
=================================

::
    >>>my_list = MyList()
    >>>my_list.append(2)
    >>>my_list.append(-3)
    >>>my_list.append(7)
    >>>my_list.append(1)
    >>>my_list.append(3)
    >>>print(my_list)
    >>>print("======")
    >>>my_list.print_sorted()
    [2, -3, 7, 1, 3]
    ======
    [-3, 1, 2, 3, 7]